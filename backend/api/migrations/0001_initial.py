# Generated by Django 4.2.23 on 2025-07-29 12:09

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=api.models.generate_uuid, editable=False, primary_key=True, serialize=False)),
                ('avater', models.URLField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('approver', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='ユーザーが所属するグループ', related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='ユーザーに付与された権限', related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GenerateGroup',
            fields=[
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('tag', models.CharField(blank=True, default='', max_length=256)),
                ('joined_token', models.CharField(blank=True, help_text='UUID形式の招待トークン', max_length=36, null=True, unique=True)),
                ('is_public', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.IntegerField(default=100, help_text='グループの活動状況に基づくスコア。デフォルト:100, 最大:1000', verbose_name='スコア')),
                ('generate_credits', models.IntegerField(default=100, help_text='生成機能を使用するためのクレジット', verbose_name='生成クレジット')),
            ],
        ),
        migrations.CreateModel(
            name='InviteAppover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(default=api.models.get_default_expired)),
                ('invitee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_invite_received', to=settings.AUTH_USER_MODEL)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.generategroup')),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('header', models.CharField(blank=True, default='', help_text='この目標のタイトル', max_length=255, null=True, verbose_name='目標タイトル')),
                ('description', models.TextField(verbose_name='目標内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日')),
                ('deadline', models.DateField(blank=True, help_text='この目標の締め切り', null=True, verbose_name='締め切り')),
                ('is_concrete', models.BooleanField(default=False, help_text='締め切りか担当者が設定されると自動でTrueになります', verbose_name='具体化済み')),
                ('is_completed', models.BooleanField(default=False, verbose_name='達成済み')),
                ('assignee', models.ForeignKey(blank=True, help_text='この目標の責任者', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_goal', to=settings.AUTH_USER_MODEL, verbose_name='担当者')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='目標', to='api.generategroup')),
            ],
        ),
        migrations.CreateModel(
            name='GenerateLibrary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('tag', models.CharField(blank=True, default='', max_length=256)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='generategroup',
            name='goals',
            field=models.ManyToManyField(blank=True, to='api.goal'),
        ),
        migrations.AddField(
            model_name='generategroup',
            name='members',
            field=models.ManyToManyField(blank=True, related_name='joined_name', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='generategroup',
            name='owner',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='owned_group', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CustomOutStandingToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jti', models.UUIDField(unique=True, verbose_name='JTI')),
                ('token', models.TextField(verbose_name='トークン文字列')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('expires_at', models.DateTimeField(verbose_name='有効期限')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
            ],
            options={
                'verbose_name': 'アウトスタンディングトークン',
                'verbose_name_plural': 'アウトスタンディングトークン',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomBlackListToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blacklisted_at', models.DateTimeField(auto_now_add=True, verbose_name='ブラックリスト登録日時')),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blacklisted_token', to='api.customoutstandingtoken')),
            ],
            options={
                'verbose_name': 'カスタム無効トークン',
                'verbose_name_plural': 'カスタム無効トークン一覧',
                'ordering': ['-blacklisted_at'],
            },
        ),
        migrations.CreateModel(
            name='ConnectLibrary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='接続先スタジオ', to='api.generategroup')),
                ('target', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='対象ライブラリ', to='api.generatelibrary')),
            ],
        ),
        migrations.CreateModel(
            name='GeneratePublicToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4)),
                ('is_used', models.BooleanField(default=False)),
                ('is_valid', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='group_tokens', to='api.generategroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Generate Token',
                'verbose_name_plural': 'Generate Tokens',
                'unique_together': {('user', 'groups')},
            },
        ),
    ]
